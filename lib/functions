#!/bin/bash
set -eux
function my_trap_handler()
{
        MYSELF="$0"               # equals to my script name
        LASTLINE="$1"            # argument 1: last line of error occurence
        LASTERR="$2"             # argument 2: error code of last command
        echo "${MYSELF}: line ${LASTLINE}: exit status of last command: ${LASTERR}"

        # do additional processing: send email or SNMP trap, write result to database, etc.
}
trap 'my_trap_handler ${LINENO} ${$?}' ERR

# This has changed recently but should not in the future
pypi_url="http://pypi.openstack.org/openstack"

function give_sudo {
  user=$1
  echo "$user ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/$user
  chmod 0440 /etc/sudoers.d/$user
  visudo -c
}

function install-packages {
  DEBIAN_FRONTEND="noninteractive" apt-get --yes install \
  -o DPkg::Options::="--force-confdef" \
  -o DPkg::Options::="--force-confold" $*
}

function install_scripts {
  install -m 0755 -o root -g root $(dirname $0)/../bin/os-svc-install /usr/local/bin/os-svc-install
  install -m 0755 -o root -g root $(dirname $0)/../bin/os-svc-upstart /usr/local/bin/os-svc-upstart
}

function install_openrc {
  install -m 0755 -o root -g root $(dirname $0)/../openrc /etc/profile.d/default_openstack_credentials.sh
}

function drop_heat_data {
  local heat_file=/var/lib/cloud/data/cfn-init-data
  mkdir -p /var/lib/cloud/data
  install -m 0755 -o root -g root $OS_CONFIG $heat_file
  os-config-applier --templates $(dirname $0)/../config

  # TODO: parse json, don't use sed
  local private_iface=$(os-config-applier --key nova.network.private_interface)
  local my_ip=$(ip addr show | grep "global $private_iface" | awk '{print $2}' | awk -F/ '{print $1}')
  sed -i "s/\"my_ip\": \".*\"/\"my_ip\": \"$my_ip\"/" $heat_file
  sed -i "s/\"routing_source\": \".*\"/\"routing_source\": \"$my_ip\"/" $heat_file
}

function client_tools {
  # These tools should aways be backwards compatable. So grabbing the latest from trunk should work.
  for client in python-novaclient python-quantumclient python-glanceclient python-keystoneclient; do
    if [ ! -d /opt/stack/$client ]; then
      git clone --depth 1 https://github.com/openstack/$client.git /opt/stack/$client
      [ -e /opt/stack/$client/tools/pip-requires ] && pip install -r /opt/stack/$client/tools/pip-requires
      pip install -i ${pypi_url} /opt/stack/$client
    fi
  done
}

function db {
  install-packages mysql-server python-mysqldb
  sed -i 's/127.0.0.1/'$(os-config-applier --key database.host)'/g' /etc/mysql/my.cnf
}

function keystone {
  local keystone_branch=$(os-config-applier --key keystone.release)
  os-svc-install -n keystone -u keystone -r https://github.com/openstack/keystone.git -b $keystone_branch
  os-svc-upstart keystone keystone /usr/local/bin/keystone-all "--config-dir /etc/keystone --log-config /etc/keystone/logging.conf"
  mkdir -p /etc/keystone/ssl && chown -R keystone:keystone /etc/keystone/ssl
}

function glance {
  local glance_branch=$(os-config-applier --key glance.release)
  os-svc-install -n glance -u glance -r https://github.com/openstack/glance.git -b $glance_branch
  mkdir -p /var/lib/glance/images && chown -R glance:glance /var/lib/glance/images
  os-svc-upstart glance-api glance /usr/local/bin/glance-api "--debug --log-config /etc/glance/logging.conf --use-syslog"
  os-svc-upstart glance-reg glance /usr/local/bin/glance-registry "--debug --log-config /etc/glance/logging.conf --use-syslog"
}

function cinder {
  install-packages lvm2 tgt linux-headers-`uname -r` iscsitarget iscsitarget-dkms
  local cinder_branch=$(os-config-applier --key cinder.release)
  os-svc-install -n cinder -u cinder -r https://github.com/openstack/cinder.git -b $cinder_branch
  give_sudo cinder
  os-svc-upstart cinder-api cinder /usr/local/bin/cinder-api "--config-dir /etc/cinder --use-syslog"
  os-svc-upstart cinder-volume cinder /usr/local/bin/cinder-volume "--config-dir /etc/cinder --debug --use-syslog"
  os-svc-upstart cinder-scheduler cinder /usr/local/bin/cinder-scheduler "--config-dir /etc/cinder --use-syslog"
  mkdir -p /etc/tgt/conf.d
  echo 'include /etc/tgt/conf.d/cinder_tgt.conf' > /etc/tgt/targets.conf
  echo 'include /var/lib/cinder/volumes/*' > /etc/tgt/conf.d/cinder_tgt.conf

}

function horizon {
  install-packages nodejs python-openssl python-dev
  which node || ln -s $(which nodejs) /usr/bin/node
  local horizon_branch=$(os-config-applier --key horizon.release)
  os-svc-install -n horizon -u horizon -r https://github.com/openstack/horizon.git -b $horizon_branch
  if [ ! -e /opt/stack/horizon/.venv ]; then python /opt/stack/horizon/tools/install_venv.py; fi
  mkdir -p /opt/stack/horizon/static && chown -R horizon:horizon /opt/stack/horizon/static
  os-svc-upstart horizon horizon /opt/stack/horizon/manage.py "runserver 0.0.0.0:8080"
}

function rabbit {
  install-packages rabbitmq-server
}

function nova_common {
  install-packages dnsmasq dnsmasq-utils ebtables libvirt-bin python-libvirt kvm pm-utils
  local nova_branch=$(os-config-applier --key nova.release)
  os-svc-install -n nova -u nova -r https://github.com/openstack/nova.git -b $nova_branch
  usermod -a -G libvirtd nova
  # This should be reviewed for security
  give_sudo nova
  mkdir -p /var/lib/nova/keys && chown -R nova:nova /var/lib/nova/keys
  chown -R nova:nova /var/lib/misc/
  os-svc-upstart nova-network          nova /usr/local/bin/nova-network          "--config-dir /etc/nova --debug --use-syslog"
}

function nova_compute {
  nova_common
  os-svc-upstart nova-compute          nova /usr/local/bin/nova-compute          "--config-dir /etc/nova --debug --use-syslog"
  os-svc-upstart nova-api              nova /usr/local/bin/nova-api              "--config-dir /etc/nova --use-syslog"
}

function nova_except_compute {
  nova_common

  os-svc-upstart nova-api              nova /usr/local/bin/nova-api              "--config-dir /etc/nova --use-syslog"
  os-svc-upstart nova-rpc-zmq-receiver nova /usr/local/bin/nova-rpc-zmq-receiver "--config-dir /etc/nova --use-syslog"
  os-svc-upstart nova-cert             nova /usr/local/bin/nova-cert             "--config-dir /etc/nova --use-syslog"
  os-svc-upstart nova-scheduler        nova /usr/local/bin/nova-scheduler        "--config-dir /etc/nova --debug"
  os-svc-upstart nova-consoleauth      nova /usr/local/bin/nova-consoleauth      "--config-dir /etc/nova --use-syslog"
  os-svc-upstart nova-conductor        nova /usr/local/bin/nova-conductor        "--config-dir /etc/nova --use-syslog"

  mkdir -p /tftpboot/pxelinux.cfg/
}

function tempest {
  local tempest_branch=$(os-config-applier --key tempest.release)
  os-svc-install -n tempest -u tempest -r https://github.com/openstack/tempest.git -b $tempest_branch
}

function ip_forwarding {
  ctl_iface=$(os-config-applier --key interfaces.control)
  pub_iface=$(os-config-applier --key interfaces.public)
  ip link set $ctl_iface promisc on
  ip link set $pub_iface promisc on

  cat > /etc/sysctl.conf <<eof
net.ipv4.ip_forward=1
net.ipv4.conf.all.rp_filter = 0
net.ipv4.conf.default.rp_filter = 0
eof
}

function gen_stackrc {
  cat > $(dirname $0)/../stackrc <<eof
export NOVA_VERSION=1.1
export OS_PASSWORD=$(os-config-applier --key admin-password)
export OS_AUTH_URL=http://$(os-config-applier --key openstack.public_address):5000/v2.0
export OS_USERNAME=admin
export OS_TENANT_NAME=admin
export COMPUTE_API_VERSION=1.1
export OS_NO_CACHE=True
eof
}


function common_deps {
  install-packages python-pip
  pip install -U git+https://github.com/echohead/os-config-applier.git
  drop_heat_data
  install_scripts
  apt-get update

  install-packages git ipmitool python-dev python-pip python-greenlet \
    python-mysqldb screen cowsay ccze libxml2-dev libxslt-dev python-zmq \
    openvswitch-common openvswitch-controller openvswitch-switch \
    open-iscsi python-numpy python-lxml

  ip_forwarding
  client_tools
  gen_stackrc
}

